package lumicode.agendaja.api.resource;

import java.util.Calendar;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import lumicode.agendaja.api.model.Agendamento;
import lumicode.agendaja.api.model.EmServico;
import lumicode.agendaja.api.model.Estabelecimento;
import lumicode.agendaja.api.model.Funcionario;
import lumicode.agendaja.api.model.Servico;
import lumicode.agendaja.api.repository.AgendamentoRepository;
import lumicode.agendaja.api.repository.AgendamentoServicoRepository;
import lumicode.agendaja.api.repository.EmServicoRepository;
import lumicode.agendaja.api.repository.dto.FuncionarioDTORepository;
import lumicode.agendaja.api.utils.CalculadoDeDuracao;
@RestController
@RequestMapping("/EmServico")
@CrossOrigin(origins = "*")
public class EmServicoResource {
	@Autowired
	private EmServicoRepository emServicoRepository;
	
	@Autowired
	private AgendamentoServicoRepository agendamentoServicoRepository;

	@Autowired
	private AgendamentoRepository agendamentoRepository;
	
	@Autowired 
	private FuncionarioDTORepository funcionarioDTORepository;
	
	@GetMapping
	private List<EmServico> listaDeFuncionariosEmServico(){
		return emServicoRepository.findAll();
	}
	
	@PostMapping
	private ResponseEntity<?> cadastrarEmServico(@RequestBody Long idEstabelecimento,	
			@RequestBody Long idAgendamento, HttpServletResponse response  ){
		
		Agendamento agendamento = agendamentoRepository.pegarAgendamento(idAgendamento);
		
		//pegando atributos para colocar o funcionario em servico
		String[] datahora = agendamento.getDataHorarioAgendado().split(" ");
		Long idFuncionario = agendamento.getFuncionario().getIdFuncionario();
		String horaInicio = datahora[1];
		String[] dataEmServico = datahora[0].split("-");
		
		//dia semana, dia mes e ano
		Calendar calendar = Calendar.getInstance();
		Integer diaSemana = calendar.get(Calendar.DAY_OF_WEEK);
		String diaMes = dataEmServico[2];
		String mes = dataEmServico[1];
		String ano = dataEmServico[0];
		
		//pegando a hora do termino do servico
		Servico servico = agendamentoServicoRepository.pegarAgendamentoServico(agendamento.getIdAgendamento());
		Integer duracaoServico = servico.getDuracaoServico();
		CalculadoDeDuracao calculoDucarao = new CalculadoDeDuracao();
		calculoDucarao.calcularDuracao(horaInicio, duracaoServico);
		
		
		//colocando o funcionario em servico
		EmServico emServico = new EmServico();
		emServico.setFuncionario(funcionarioDTORepository.pegarFuncionario(idFuncionario));
		
		
		
		
		return null;
	}
	
	
}
